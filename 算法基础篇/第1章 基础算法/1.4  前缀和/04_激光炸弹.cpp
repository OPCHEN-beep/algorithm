//# P2280 [HNOI2003] 激光炸弹
//
//## 题目描述
//
//一种新型的激光炸弹，可以摧毁一个边长为 $m$ 的正方形内的所有目标。现在地图上有 $n$ 个目标，用整数 $x_i$ , $y_i$ 表示目标在地图上的位置，每个目标都有一个价值 $v_i$。激光炸弹的投放是通过卫星定位的，但其有一个缺点，就是其爆破范围，即那个边长为 $m$ 的边必须与 $x$ 轴，$y$ 轴平行。若目标位于爆破正方形的边上，该目标不会被摧毁。
//
//现在你的任务是计算一颗炸弹最多能炸掉地图上总价值为多少的目标。
//
//可能存在多个目标在同一位置上的情况。
//
//## 输入格式
//
//输入的第一行为整数 $n$ 和整数 $m$；
//
//接下来的 $n$ 行，每行有 $3$ 个整数 $x, y, v$，表示一个目标的坐标与价值。
//
//## 输出格式
//
//输出仅有一个正整数，表示一颗炸弹最多能炸掉地图上总价值为多少的目标（结果不会超过 $32767$ ）。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//2 1
//0 0 1
//1 1 1
//```
//
//### 输出 #1
//
//```
//1
//```
//
//## 说明/提示
//
//**数据规模与约定**
//
//- 对于 $100\%$ 的数据，保证 $1 \le n \le 10^4$，$0 \le x_i ,y_i \le 5\times 10^3$，$1 \le m \le 5\times 10^3$，$1 \le v_i < 100$。

#include <iostream>
using namespace std;

const int N = 5010;

int n, m;
int a[N][N];
int f[N][N];//前缀和矩阵

int main()
{
    cin >> n >> m;
    while(n--)
    {
        int x, y, v;
        cin >> x >> y >> v;
        x++, y++;//下标从1开始计数
        a[x][y] += v;//同一个位置可能存在有多个目标
    }

    n = 5001;
    //预处理前缀和矩阵
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j <= n; j++)
        {
            f[i][j] = f[i - 1][j] + f[i][j - 1] - f[i - 1][j - 1] + a[i][j];
        }
    }

    int ret = 0;
    m = min(m, n);//如果m很大，就相当于把整个区域全部摧毁
    //枚举所有边长为m的正方形
    for(int x2 = m; x2 <= n; x2++)
    {
        for(int y2 = m; y2 <= n; y2++)
        {
            int x1 = x2 - m + 1, y1 = y2 - m + 1;
            ret = max(ret, f[x2][y2] - f[x1 - 1][y2] - f[x2][y1 - 1] + f[x1 - 1][y1 - 1]);
        }
    }
    cout << ret << endl;
    
    return 0;
}
