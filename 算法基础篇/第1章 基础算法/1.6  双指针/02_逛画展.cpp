//# P1638 逛画展
//
//## 题目描述
//
//博览馆正在展出由世上最佳的 $m$ 位画家所画的图画。
//
//游客在购买门票时必须说明两个数字，$x$ 和 $y$，代表他要看展览中的第 $x$ 幅至第 $y$ 幅画（包含 $x,y$）之间的所有图画，而门票的价钱就是一张图画一元。
//
//Sept 希望入场后可以看到所有名师的图画。当然，他想最小化购买门票的价格。
//
//请求出他购买门票时应选择的 $x,y$，数据保证一定有解。
//
//若存在多组解，**输出 $x$ 最小的那组**。
//
//## 输入格式
//
//第一行两个整数 $n,m$，分别表示博览馆内的图画总数及这些图画是由多少位名师所绘画的。
//
//第二行包含 $n$ 个整数 $a_i$，代表画第 $i$ 幅画的名师的编号。
//
//## 输出格式
//
//一行两个整数 $x,y$。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//12 5
//2 5 3 1 3 2 4 1 1 5 4 3
//```
//
//### 输出 #1
//
//```
//2 7
//```
//
//## 说明/提示
//
//#### 数据规模与约定
//
//- 对于 $30\%$ 的数据，有 $n\le200$，$m\le20$。
//- 对于 $60\%$ 的数据，有 $n\le10^5$，$m\le10^3$。
//- 对于 $100\%$ 的数据，有 $1\leq n\le10^6$，$1 \leq a_i \leq m\le2\times10^3$。

#include <iostream>

using namespace std;

const int N = 1e6 + 10, M = 2e3 + 10;

int n, m;
int a[N];

int kind;//窗口内有效元素的个数
int mp[N];//统计窗口内每个元素出现的次数

int main()
{
    cin >> n >> m;
    for(int i = 1; i <= n; i++)
        cin >> a[i];

    int left = 1, right = 1;
    int ret = n, begin = 1;

    while(right <= n)
    {
        //进窗口
        if(mp[a[right]]++ == 0) kind++;

        //判断
        while(kind == m)
        {
            //更新结果
            int len = right - left + 1;
            if(len < ret)
            {
                ret = len;
                begin = left;
            }

            //出窗口
            if(mp[a[left]]-- == 1) kind--;
            left++;
        }
        right++;
    }

    cout << begin << " " << begin + ret - 1 << endl;

    return 0;
}
