//# B3616 【模板】队列
//
//## 题目描述
//
//请你实现一个队列（queue），支持如下操作：
//- `push(x)`：向队列中加入一个数 $x$。
//- `pop()`：将队首弹出。如果此时队列为空，则不进行弹出操作，并输出 `ERR_CANNOT_POP`。
//- `query()`：输出队首元素。如果此时队列为空，则输出 `ERR_CANNOT_QUERY`。
//- `size()`：输出此时队列内元素个数。
//
//## 输入格式
//
//第一行，一个整数 $n$，表示操作的次数。  
//
//接下来 $n$ 行，每行表示一个操作。格式如下：
//
//- `1 x`，表示将元素 `x` 加入队列。
//- `2`，表示将队首弹出队列。
//- `3`，表示查询队首。
//- `4`，表示查询队列内元素个数。
//
//## 输出格式
//
//输出若干行，对于每个操作，按「题目描述」输出结果。
//
//每条输出之间应当用空行隔开。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//13
//1 2
//3
//4
//1 233
//3
//2
//3
//2
//4
//3
//2
//1 144
//3
//```
//
//### 输出 #1
//
//```
//2
//1
//2
//233
//0
//ERR_CANNOT_QUERY
//ERR_CANNOT_POP
//144
//```
//
//## 说明/提示
//
//### 样例解释
//首先插入 `2`，队首为 `2`、队列内元素个数为 `1`。  
//插入 `233`，此时队首为 `2`。  
//弹出队首，此时队首为 `233`。  
//弹出队首，此时队首为空。  
//再次尝试弹出队首，由于队列已经为空，此时无法弹出。  
//插入 `144`，此时队首为 `144`。  
//
//
//
//### 数据规模与约定
//
//对于 $100\%$ 的测试数据，满足 $n\leq 10000$，且被插入队列的所有元素值是 $[1, 1000000]$ 以内的正整数。

#include <iostream>
using namespace std;

const int N = 1e4 + 10;

int q[N], h, t;

int main()
{
    int n;
    cin >> n;
    while(n--)
    {
        int op, x;
        cin >> op;
        if(op == 1)//进队
        {
            cin >> x;
            q[t++] = x;;
        }
        else if(op == 2)//出队
        {
            if(h == t)
                cout << "ERR_CANNOT_POP" << endl;
            else 
                h++;
        }
        else if(op == 3)//队头元素
        {
            if(h == t)
                cout << "ERR_CANNOT_QUERY" << endl;
            else
                cout << q[h] << endl;
        }
        else//元素个数
        {
            cout << t - h << endl;
        }
    }

    return 0;
}
