//# P1030 [NOIP 2001 普及组] 求先序排列
//
//## 题目描述
//
//给出一棵二叉树的中序与后序排列。求出它的先序排列。（约定树结点用不同的大写字母表示，且二叉树的节点个数 $ \le 8$）。
//
//## 输入格式
//
//共两行，均为大写字母组成的字符串，表示一棵二叉树的中序与后序排列。
//
//## 输出格式
//
//共一行一个字符串，表示一棵二叉树的先序。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//BADC
//BDCA
//```
//
//### 输出 #1
//
//```
//ABCD
//```
//
//## 说明/提示
//
//**【题目来源】**
//
//NOIP 2001 普及组第三题

#include <iostream>
#include <string>

using namespace std;

string a, b;

void dfs(int l1, int r1, int l2, int r2)
{
    //递归出口
    //区间不合法时，返回
    if(l1 > r1) return;

    //1.确定根节点 - b[r2]
    cout << b[r2];

    int p = l1;
    while(a[p] != b[r2])
        p++;

    //2.划分左右子树
    dfs(l1, p-1, l2, l2 + p - l1 - 1);//递归处理左子树
    dfs(p + 1, r1, l2 + p - l1, r2 - 1);//递归处理右子树
}

int main()
{
    cin >> a >> b;

    dfs(0, a.size() - 1, 0, b.size() - 1);

    return 0;
}
