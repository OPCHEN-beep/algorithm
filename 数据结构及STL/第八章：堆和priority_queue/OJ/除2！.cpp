//除2！
// 题解
// 
// 讨论
// 
// 查看他人的提交
// 
// 我的提交
//
//题号：NC213140
//时间限制：C/C++/Rust/Pascal 1秒，其他语言2秒
//空间限制：C/C++/Rust/Pascal 256 M，其他语言512 M
//64bit IO Format: %lld
//题目描述 
//给一个数组，一共有 
//n
// 
//n 个数。
//你能进行最多 
//k
// 
//k 次操作。每次操作可以进行以下步骤：
//选择数组中的一个偶数 
//a
//i
//a 
//i
//?
// ，将其变成 
//a
//i
///
//2
//a 
//i
//?
// /2 。
//现在你进行不超过 
//k
// 
//k 次操作后，让数组中所有数之和尽可能小。请输出这个最小的和。
//
//
//
//输入描述:
//第一行输入两个正整数 
//n
// 
//n 和 
//k
// 
//k ，用空格隔开   
//第二行输入
//n
// 
//n 个正整数 
//a
//i
//a 
//i
//?
// 
//数据范围：
//1
//≤
//n
//≤
//100000
//，
//1
//≤
//k
//≤
//1
//0
//9
//1≤n≤100000，1≤k≤10 
//9
// 
//1
//≤
//a
//i
//≤
//1
//0
//9
//1≤a 
//i
//?
// ≤10 
//9
// 
//
//输出描述:
//一个正整数，代表和的最小值。
//示例1
//输入
//复制
//5 3
//2 4 8 10 11
//输出
//复制
//24
//说明
//对8操作2次，对10操作1次，最后的数组是2 4 2 5 11。可以证明这样的操作是最优的。

#include <iostream>
#include <queue>

using namespace std;

typedef long long LL;

int n, k;
priority_queue<int> heap;

int main()
{        
    cin >> n >> k;
    LL sum = 0;
    
    for(int i = 1; i <= n; i++)
    {
        int x;
        cin >> x;
        sum += x;
        if(x % 2 == 0)
            heap.push(x);
    }

    while(heap.size() && k--)
    {
        int t = heap.top() / 2;
        heap.pop();
        
        sum -= t;
        if(t % 2 == 0)
            heap.push(t);
    }
    
    cout << sum << endl;
    
    return 0;
}
