//# P5250 【深基17.例5】木材仓库
//
//## 题目描述
//
//博艾市有一个木材仓库，里面可以存储各种长度的木材，但是保证没有两个木材的长度是相同的。作为仓库负责人，你有时候会进货，有时候会出货，因此需要维护这个库存。有不超过 $10^5$ 条的操作：
//
//- 进货，格式 `1 Length`：在仓库中放入一根长度为 $Length$（不超过 $10^9$）的木材。如果已经有相同长度的木材那么输出 `Already Exist`。
//- 出货，格式 `2 Length`：从仓库中取出长度为 $Length$ 的木材。如果没有刚好长度的木材，取出仓库中存在的和要求长度最接近的木材。如果有多根木材符合要求，取出比较短的一根。输出取出的木材长度。如果仓库是空的，输出 `Empty`。
//
//## 输入格式
//
//第一行一个数 $m$ 代表操作次数。
//
//接下来 $m$ 行，每行一次操作，格式如题目描述所示。
//
//## 输出格式
//
//对于每次操作，按照题目描述要求输出答案。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//7
//1 1
//1 5
//1 3
//2 3
//2 3
//2 3
//2 3
//```
//
//### 输出 #1
//
//```
//3
//1
//5
//Empty
//```

#include <iostream>
#include <set>

using namespace std;

typedef long long LL;

const LL INF = 1e10 + 10;

set<LL> mp;

int main()
{
    int q;
    cin >> q;
    //左右护法，处理边界情况
    mp.insert(-INF);
    mp.insert(INF);

    while(q--)
    {
        LL op, len;
        cin >> op >> len;

        if(op == 1)//进货
        {
            if(mp.count(len))
                cout << "Already Exist" << endl;
            else
                mp.insert(len);
        }
        else
        {
            if(mp.size() == 2)
            {
                cout << "Empty" << endl;
            }
            else{
                //找到距离len最近的那一个
                auto it = mp.lower_bound(len);
                auto tmp = it;
                tmp--;

                if(abs(*tmp - len) <= abs(*it - len))
                {
                    cout << *tmp << endl;
                    mp.erase(tmp);
                }
                else
                {
                    cout << *it << endl;
                    mp.erase(it);
                }
            }
            
        }
    }
}
