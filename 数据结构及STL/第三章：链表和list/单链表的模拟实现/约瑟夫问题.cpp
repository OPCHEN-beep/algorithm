//# P1996 约瑟夫问题
//
//## 题目描述
//
//$n$ 个人围成一圈，从第一个人开始报数,数到 $m$ 的人出列，再由下一个人重新从 $1$ 开始报数，数到 $m$ 的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。
//
//**注意：本题和《深入浅出-基础篇》上例题的表述稍有不同。书上表述是给出淘汰 $n-1$ 名小朋友，而该题是全部出圈。**
//
//## 输入格式
//
//输入两个整数 $n,m$。
//
//## 输出格式
//
//输出一行 $n$ 个整数，按顺序输出每个出圈人的编号。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//10 3
//```
//
//### 输出 #1
//
//```
//3 6 9 2 7 1 8 5 10 4
//```
//
//## 说明/提示
//
//$1 \le m, n \le 100$

#include <iostream>
using namespace std;

const int N = 110;
int n, m;
int ne[N];

int main()
{
    cin >> n >> m;
    //创建循环链表
    for(int i = 1; i < n; i++)
        ne[i] = i + 1;
    ne[n] = 1;

    //模拟约瑟夫游戏过程
    int t = n;
    for(int i = 1; i <= n; i++)//执行n次出圈操作
    {
        for(int j = 1; j < m; j++)//让t向后移动m-1次
        {
            t = ne[t];
        }

        cout << ne[t] << " ";
        ne[t] = ne[ne[t]];
    }

    return 0;
}
