//# B2052 简单计算器
//
//## 题目描述
//
//一个最简单的计算器，支持 `+,-,*,/` 四种运算。仅需考虑输入输出为整数的情况，数据和运算结果不会超过 `int` 表示的范围。然而：
//
//1. 如果出现除数为 $0$ 的情况，则输出：`Divided by zero!`。
//
//2. 如果出现无效的操作符（即不为 `+,-,*,/` 之一），则输出：`Invalid operator!`。
//
//3. 除号表示整除，结果向 0 取整。
//
//## 输入格式
//
//输入只有一行，共有三个参数，其中第 $1,2$ 个参数为整数，第 $3$ 个参数为操作符`（+,-,*,/）`。
//
//## 输出格式
//
//输出只有一行，一个整数，为运算结果。然而：
//
//1. 如果出现除数为 $0$ 的情况，则输出：`Divided by zero!`。
//
//2. 如果出现无效的操作符（即不为 `+,-,*,/` 之一），则输出：`Invalid operator!`。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//1 2 +
//```
//
//### 输出 #1
//
//```
//3
//```
//
//## 输入输出样例 #2
//
//### 输入 #2
//
//```
//2 4 *
//```
//
//### 输出 #2
//
//```
//8
//```
//
//## 输入输出样例 #3
//
//### 输入 #3
//
//```
//5 0 /
//```
//
//### 输出 #3
//
//```
//Divided by zero!
//```

#include <iostream>
#include <cstdio>
using namespace std;

int main()
{
    int x, y;
    char ch;
    cin >> x >> y >> ch;
    
    switch(ch)
    {
        case '+':
            printf("%d\n", x+y);
            break;
        case '-':
            printf("%d\n", x-y);
            break;
        case '*':
            printf("%d\n", x*y);
            break;
        case '/':
            if(y == 0)
                printf("Divided by zero!\n");
            else
                printf("%d\n", x/y);
            break;
        default:
            printf("Invalid operator!\n");
            break;  
    }

    return 0;
}
