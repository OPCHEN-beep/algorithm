//# B2103 图像相似度
//
//## 题目描述
//
//给出两幅相同大小的黑白图像（用 $0-1$ 矩阵）表示，求它们的相似度。
//
//说明：若两幅图像在相同位置上的像素点颜色相同，则称它们在该位置具有相同的像素点。两幅图像的相似度定义为相同像素点数占总像素点数的百分比。
//
//## 输入格式
//
//第一行包含两个整数 $m$ 和 $n$，表示图像的行数和列数，中间用单个空格隔开。$1 \le m \le 100,1 \le n \le 100$。
//
//之后 $m$ 行，每行 $n$ 个整数 $0$ 或 $1$，表示第一幅黑白图像上各像素点的颜色。相邻两个数之间用单个空格隔开。
//
//之后 $m$ 行，每行 $n$ 个整数 $0$ 或 $1$，表示第二幅黑白图像上各像素点的颜色。相邻两个数之间用单个空格隔开。
//
//## 输出格式
//
//一个实数，表示相似度（以百分比的形式给出），精确到小数点后两位。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//3 3
//1 0 1
//0 0 1
//1 1 0
//1 1 0
//0 0 1
//0 0 1
//```
//
//### 输出 #1
//
//```
//44.44
//```

#include <iostream>
#include <cstdio>
using namespace std;

int arr1[110][110] = {0};
int arr2[110][110] = {0};
int m, n;
int cnt;
double sim;

int main()
{

    cin >> m >> n;
    for(int i = 0; i < m; i++)
    {
        for(int j = 0; j < n; j++)
        {
            cin >> arr1[i][j];
        }
    }

    for(int i = 0; i < m; i++)
    {
        for(int j = 0; j < n; j++)
        {
            cin >> arr2[i][j];
        }
    }

    for(int i = 0; i < m; i++)
    {
        for(int j = 0; j < n; j++)
        {
            if(arr1[i][j] == arr2[i][j])
                cnt++;
        }
    }

    sim = cnt * 1.0 * 100 / (m * n);
    printf("%.2lf\n", sim);

    return 0;
}
