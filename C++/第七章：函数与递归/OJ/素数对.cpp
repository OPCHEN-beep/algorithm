//# B2132 素数对
//
//## 题目描述
//
//定义两个相差为 $2$ 的素数称为素数对，如 $5$ 和 $7,17$ 和 $19$ 等，要求找出所有两个数均不大于 $n$ 的素数对。
//
//## 输入格式
//
//一个正整数 $n$。$1 \le n \le 10000$。
//
//## 输出格式
//
//所有小于等于 $n$ 的素数对。每对素数对输出一行，中间用单个空格隔开。若没有找到任何素数对，输出 `empty`。
//
//## 输入输出样例 #1
//
//### 输入 #1
//
//```
//10
//```
//
//### 输出 #1
//
//```
//3 5
//5 7
//```
//
//## 输入输出样例 #2
//
//### 输入 #2
//
//```
//100
//```
//
//### 输出 #2
//
//```
//3 5
//5 7
//11 13
//17 19
//29 31
//41 43
//59 61
//71 73
//```
//
//## 输入输出样例 #3
//
//### 输入 #3
//
//```
//3
//```
//
//### 输出 #3
//
//```
//empty
//```

#include <iostream>
#include <cmath>
using namespace std;

bool IsPrime(int n)
{
    int j = 0;
    if(n < 2)
        return false;
    for(j = 2; j <= sqrt(n); j++)
    {
        if(n % j == 0)
            return false;
    }
    return true;
}

int main()
{
    int n = 0;
    cin >> n;
    int i = 0;
    int flag = 0;
    for(i = 2; i + 2 <= n; i++)
    {
        if(IsPrime(i) && IsPrime(i + 2))
        {
            flag = 1;
            cout << i << " " << i + 2 << endl;
        }
    }

    if(flag == 0)
        cout << "empty" << endl;

    return 0;
}
